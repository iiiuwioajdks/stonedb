--source include/have_tianmu.inc

--echo #
--echo # UPDATE decimal and DElETE WHERE
--echo #

--disable_warnings
DROP DATABASE IF EXISTS update_signed_test;

CREATE DATABASE update_signed_test;
USE update_signed_test;

DROP PROCEDURE IF EXISTS signedinsertproc;
DROP PROCEDURE IF EXISTS signeddeleteproc;
# DROP PROCEDURE IF EXISTS unsignedinsertproc;
# DROP PROCEDURE IF EXISTS unsigneddeleteproc;
--enable_warnings

DELIMITER //;

CREATE PROCEDURE signedinsertproc ()
 BEGIN
  INSERT INTO cs1 VALUES (125, 125);
  INSERT INTO cs1 VALUES (-125, -125);
  INSERT INTO cs1 values (99998, 9998);
  INSERT INTO cs1 values (99999, 9999);
  INSERT INTO cs1 values (-99998, -9998);
  INSERT INTO cs1 values (-99999, -9999);
  INSERT INTO cs1 VALUES (0, 0);
  INSERT INTO cs1 VALUES (NULL, NULL);
  
  INSERT INTO cs2 VALUES (1.25, 1.25);
  INSERT INTO cs2 VALUES (-1.25, -1.25);
  INSERT INTO cs2 values (99999.99998, 99999.99998);
  INSERT INTO cs2 values (99999.99999, 99999.99999);
  INSERT INTO cs2 values (-99999.99998, -99999.99998);
  INSERT INTO cs2 values (-99999.99999, -99999.99999);
  INSERT INTO cs2 VALUES (1.1234567891, 1.1234567891);
  INSERT INTO cs2 VALUES (1.99999, 1.99999);
  INSERT INTO cs2 VALUES (-1.1234567891, -1.1234567891);
  INSERT INTO cs2 VALUES (-1.99999, -1.99999);
  INSERT INTO cs2 VALUES (1.0000000009, 1.0000000009);
  INSERT INTO cs2 VALUES (-1.0000000009, -1.0000000009);
  INSERT INTO cs2 VALUES (0, 0);
  INSERT INTO cs2 VALUES (NULL, NULL);
  
  INSERT INTO cs3 VALUES (0.125, 0.125);
  INSERT INTO cs3 VALUES (-0.125, -0.125);
  INSERT INTO cs3 values (0.99998, 0.9998);
  INSERT INTO cs3 values (0.99999, 0.9999);
  INSERT INTO cs3 values (-0.99998, -0.9998);
  INSERT INTO cs3 values (-0.99999, -0.9999);
  INSERT INTO cs3 VALUES (0.12345, 0.1234);
  INSERT INTO cs3 VALUES (0.19999, 0.1999);
  INSERT INTO cs3 VALUES (-0.12345, -0.1234);
  INSERT INTO cs3 VALUES (-0.19999, -0.1999);
  INSERT INTO cs3 VALUES (0.00009, 0.0009);
  INSERT INTO cs3 VALUES (-0.00009, -0.0009);
  INSERT INTO cs3 VALUES (0, 0);
  INSERT INTO cs3 VALUES (NULL, NULL);
 END//


CREATE PROCEDURE signeddeleteproc ()
 BEGIN
  DELETE FROM cs1;
  DELETE FROM cs2;
  DELETE FROM cs3;
 END//


DELIMITER ;//

DROP TABLE IF EXISTS cs1;
DROP TABLE IF EXISTS cs2;
DROP TABLE IF EXISTS cs3;
# DROP TABLE IF EXISTS cs4;
# DROP TABLE IF EXISTS cs5;
# DROP TABLE IF EXISTS cs6;

CREATE TABLE cs1 (d1 DECIMAL(18), d2 DECIMAL(18));
CREATE TABLE cs2 (d1 DECIMAL(18,10), d2 DECIMAL(18,10));
CREATE TABLE cs3 (d1 DECIMAL(18,10), d2 DECIMAL(18,10));
# CREATE TABLE cs4 (d1 DECIMAL(38) UNSIGNED, d2 DECIMAL(19) UNSIGNED);
# CREATE TABLE cs5 (d1 DECIMAL(38,10) UNSIGNED, d2 DECIMAL(19,10) UNSIGNED);
# CREATE TABLE cs6 (d1 DECIMAL(38,38) UNSIGNED, d2 DECIMAL(19,19) UNSIGNED);

CALL signedinsertproc();

# Updates with constant values without a WHERE clause
UPDATE cs1 SET d1=12345, d2=1234;
UPDATE cs2 SET d1=123456.90123, d2=12345.01234;
UPDATE cs3 SET d1=0.12345, d2=0.1234;
SELECT "signedtest1", d1, d2 FROM cs1;
SELECT "signedtest1", d1, d2 FROM cs2;
SELECT "signedtest1", d1, d2 FROM cs3;

# Updates with WHERE clause
# Update a single row with a constant value in WHERE clause
CALL signeddeleteproc();
CALL signedinsertproc();
UPDATE cs1 SET d1=12345, d2=0 WHERE d1=-99998;
UPDATE cs1 SET d1=0, d2=12345 WHERE d2=9999;
UPDATE cs2 SET d1=123456.90123, d2=0 WHERE d1=-99999.99998;
UPDATE cs2 SET d1=0, d2=12345.012345678 WHERE d2=99999.99999;
UPDATE cs3 SET d1=0.12345, d2=0 WHERE d1=-0.99998;
UPDATE cs3 SET d1=0, d2=0.12345 WHERE d2=0.9999;
SELECT "signedtest2", d1, d2 FROM cs1;
SELECT "signedtest2", d1, d2 FROM cs2;
SELECT "signedtest2", d1, d2 FROM cs3;

# Update multiple rows
# Updates with multiple constant values in WHERE clause
#CALL signeddeleteproc();
#CALL signedinsertproc();
#UPDATE cs1 SET d1=12345, d2=1234 WHERE d1 in (-99998, 99999);
#UPDATE cs2 SET d1=123456.90123, d2=12345.01234 WHERE d1 in (-99999.99998, 99999.99999);
#UPDATE cs3 SET d1=0.12345, d2=0.1234 WHERE d1 in (-0.99998, 0.99999);
#SELECT "signedtest3", d1, d2 FROM cs1;
#SELECT "signedtest3", d1, d2 FROM cs2;
#SELECT "signedtest3", d1, d2 FROM cs3;

# Updates with comparison operators in WHERE clause
CALL signeddeleteproc();
CALL signedinsertproc();
UPDATE cs1 SET d1=12345, d2=1234 WHERE d1 < -99998 OR d2 > 9998;
UPDATE cs2 SET d1=123456.90123, d2=12345.01234 WHERE d1 < -99999.99998 OR d2 > 99999.99998;
UPDATE cs3 SET d1=0.12345, d2=0.1234 WHERE d1 < -0.99998 OR d2 > 0.9998;
SELECT "signedtest4a", d1, d2 FROM cs1;
SELECT "signedtest4a", d1, d2 FROM cs2;
SELECT "signedtest4a", d1, d2 FROM cs3;
CALL signeddeleteproc();
CALL signedinsertproc();
UPDATE cs1 SET d1=12345, d2=1234 WHERE d1 <= -99998 OR d2 >= 9998;
UPDATE cs2 SET d1=123456.90123, d2=12345.01234 WHERE d1 <= -99999.99998 OR d2 >= 99999.99998;
UPDATE cs3 SET d1=0.12345, d2=0.1234 WHERE d1 <= -0.99998 OR d2 >= 0.9998;
SELECT "signedtest4b", d1, d2 FROM cs1;
SELECT "signedtest4b", d1, d2 FROM cs2;
SELECT "signedtest4b", d1, d2 FROM cs3;

# Update with NULL in the WHERE clause
CALL signeddeleteproc();
CALL signedinsertproc();
UPDATE cs1 SET d1=12345, d2=1234 WHERE d1 is NULL;
UPDATE cs2 SET d1=123456.90123, d2=12345.01234 WHERE d1 is NULL;
UPDATE cs3 SET d1=0.12345, d2=0.1234 WHERE d1 is NULL;
SELECT "signedtest5", d1, d2 FROM cs1;
SELECT "signedtest5", d1, d2 FROM cs2;
SELECT "signedtest5", d1, d2 FROM cs3;

# Update with != operator
CALL signeddeleteproc();
CALL signedinsertproc();
UPDATE cs1 SET d1=12345, d2=1234 WHERE d1 != 125;
UPDATE cs2 SET d1=123456.90123, d2=12345.01234 WHERE d1 != 1.25;
UPDATE cs3 SET d1=0.12345, d2=0.1234 WHERE d1 != 0.125;
SELECT "signedtest6", d1, d2 FROM cs1;
SELECT "signedtest6", d1, d2 FROM cs2;
SELECT "signedtest6", d1, d2 FROM cs3;

# Update with non-constant value in the WHERE clause
CALL signeddeleteproc();
CALL signedinsertproc();
UPDATE cs1 SET d2=d1 WHERE d1 = d2;
UPDATE cs2 SET d2=d1 WHERE d1 = d2;
UPDATE cs3 SET d2=d1 WHERE d1 = d2;
SELECT "signedtest7", d1, d2 FROM cs1;
SELECT "signedtest7", d1, d2 FROM cs2;
SELECT "signedtest7", d1, d2 FROM cs3;
CALL signeddeleteproc();
CALL signedinsertproc();
UPDATE cs1 SET d1=d2 WHERE d1 != d2;
UPDATE cs2 SET d1=d2 WHERE d1 != d2;
UPDATE cs3 SET d1=d2 WHERE d1 != d2;
SELECT "signedtest8", d1, d2 FROM cs1;
SELECT "signedtest8", d1, d2 FROM cs2;
SELECT "signedtest8", d1, d2 FROM cs3;
CALL signeddeleteproc();
CALL signedinsertproc();
UPDATE cs1 SET d1=12345, d2=1234 WHERE d1 < d2;
UPDATE cs2 SET d1=123456.90123, d2=12345.01234 WHERE d1 < d2;
UPDATE cs3 SET d1=0.12345, d2=0.1234 WHERE d1 < d2;
SELECT "signedtest9", d1, d2 FROM cs1;
SELECT "signedtest9", d1, d2 FROM cs2;
SELECT "signedtest9", d1, d2 FROM cs3;
CALL signeddeleteproc();
CALL signedinsertproc();
UPDATE cs1 SET d1=d2 WHERE d1 > d2;
UPDATE cs2 SET d1=d2 WHERE d1 > d2;
UPDATE cs3 SET d1=d2 WHERE d1 > d2;
SELECT "signedtest10", d1, d2 FROM cs1;
SELECT "signedtest10", d1, d2 FROM cs2;
SELECT "signedtest10", d1, d2 FROM cs3;

# Updates with functions and expressions in the WHERE clause


DROP PROCEDURE IF EXISTS signedinsertproc;
DROP PROCEDURE IF EXISTS signeddeleteproc;
DROP DATABASE update_signed_test;
