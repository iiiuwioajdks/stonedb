#
# Test cases for the TIMESTAMP datatype
#
DROP DATABASE IF EXISTS timestamp_test;
set sql_mode='STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
CREATE DATABASE timestamp_test;
USE timestamp_test;
CREATE TABLE ctimestamp (a timestamp);
SET time_zone='-5:00';
INSERT INTO ctimestamp VALUES ('2019-01-01 01:02:03'), ('2019-05-05 01:01:01');
SET time_zone='+1:00';
SELECT a FROM ctimestamp ORDER BY a;
a
2019-01-01 07:02:03
2019-05-05 07:01:01
SET time_zone='-2:00';
SELECT a FROM ctimestamp ORDER BY a;
a
2019-01-01 04:02:03
2019-05-05 04:01:01
CREATE TABLE ctimestamp2 (a timestamp DEFAULT 0);
INSERT INTO ctimestamp2 SELECT * FROM ctimestamp;
SELECT a FROM ctimestamp2 ORDER BY a;
a
2019-01-01 04:02:03
2019-05-05 04:01:01
CREATE TABLE ctimestamp3 (a timestamp);
INSERT INTO ctimestamp3 VALUES (19940101), (940101),
(19940101010203), (940101010203), ('1994-01-01T01:02:03');
SELECT a FROM ctimestamp3 ORDER BY a;
a
1994-01-01 00:00:00
1994-01-01 00:00:00
1994-01-01 01:02:03
1994-01-01 01:02:03
1994-01-01 01:02:03
DROP DATABASE IF EXISTS timestamp_test;
CREATE DATABASE timestamp_test;
USE timestamp_test;
CREATE TABLE ctimestamp (a timestamp);
SET time_zone='+0:00';
INSERT INTO ctimestamp VALUES ('2019-01-02 00:02:03'),
('2019-01-02 01:02:03'), ('2019-01-02 10:11:12');
SET time_zone='+1:00';
SELECT a, a BETWEEN '2019-01-02 02:00:00' AND '2019-01-02 13:00:00'
FROM ctimestamp ORDER BY a;
a	a BETWEEN '2019-01-02 02:00:00' AND '2019-01-02 13:00:00'
2019-01-02 01:02:03	0
2019-01-02 02:02:03	1
2019-01-02 11:11:12	1
INSERT INTO ctimestamp VALUES ('2020-01-03 12:12:12'),
('2020-05-06 12:12:12'), ('2020-10-28 12:12:12');
SELECT a, DAYNAME(a), DAYOFWEEK(a), DATE_FORMAT(a, '%W %M %Y'),
MONTHNAME(a), DATE(a), YEARWEEK(a), DAYOFYEAR(a), YEAR(a),
a + INTERVAL 1 DAY, TIMESTAMPDIFF(DAY, a, '2020-01-01'),
LAST_DAY(a), TRUNCATE(a, -2), a IN ('2019-01-02 01:02:03', a),
TO_DAYS(a), DAY(a), WEEK(a), WEEKDAY(a), GREATEST(a, '2020-07-01'),
MONTH(a), QUARTER(a), DATE_ADD(a, INTERVAL 1 SECOND)
FROM ctimestamp WHERE a > '2020-01-01' ORDER BY a;
a	DAYNAME(a)	DAYOFWEEK(a)	DATE_FORMAT(a, '%W %M %Y')	MONTHNAME(a)	DATE(a)	YEARWEEK(a)	DAYOFYEAR(a)	YEAR(a)	a + INTERVAL 1 DAY	TIMESTAMPDIFF(DAY, a, '2020-01-01')	LAST_DAY(a)	TRUNCATE(a, -2)	a IN ('2019-01-02 01:02:03', a)	TO_DAYS(a)	DAY(a)	WEEK(a)	WEEKDAY(a)	GREATEST(a, '2020-07-01')	MONTH(a)	QUARTER(a)	DATE_ADD(a, INTERVAL 1 SECOND)
2020-01-03 12:12:12	Friday	6	Friday January 2020	January	2020-01-03	201952	3	2020	2020-01-04 12:12:12	-2	2020-01-31	20200103121200	1	737792	3	0	4	2020-07-01	1	1	2020-01-03 12:12:13
2020-05-06 12:12:12	Wednesday	4	Wednesday May 2020	May	2020-05-06	202018	127	2020	2020-05-07 12:12:12	-126	2020-05-31	20200506121200	1	737916	6	18	2	2020-07-01	5	2	2020-05-06 12:12:13
2020-10-28 12:12:12	Wednesday	4	Wednesday October 2020	October	2020-10-28	202043	302	2020	2020-10-29 12:12:12	-301	2020-10-31	20201028121200	1	738091	28	43	2	2020-10-28 12:12:12	10	4	2020-10-28 12:12:13
SELECT UNIX_TIMESTAMP(a), TIME_TO_SEC(a), CEIL(a),
CAST(LEAST(a, '2019-03-03 00:00:00') AS DATETIME),
ROUND(a), SECOND(a), MINUTE(a), HOUR(a), FLOOR(a)
FROM ctimestamp ORDER BY a;
UNIX_TIMESTAMP(a)	TIME_TO_SEC(a)	CEIL(a)	CAST(LEAST(a, '2019-03-03 00:00:00') AS DATETIME)	ROUND(a)	SECOND(a)	MINUTE(a)	HOUR(a)	FLOOR(a)
1546387323	3723	20190102010203	2019-01-02 01:02:03	20190102010203	3	2	1	20190102010203
1546390923	7323	20190102020203	2019-01-02 02:02:03	20190102020203	3	2	2	20190102020203
1546423872	40272	20190102111112	2019-01-02 11:11:12	20190102111112	12	11	11	20190102111112
1578049932	43932	20200103121212	2019-03-03 00:00:00	20200103121212	12	12	12	20200103121212
1588763532	43932	20200506121212	2019-03-03 00:00:00	20200506121212	12	12	12	20200506121212
1603883532	43932	20201028121212	2019-03-03 00:00:00	20201028121212	12	12	12	20201028121212
DROP DATABASE IF EXISTS timestamp_test;
CREATE DATABASE timestamp_test;
USE timestamp_test;
CREATE TABLE ctimestamp (a timestamp, b int);
SET time_zone='+0:00';
INSERT INTO ctimestamp VALUES ('2019-01-03 12:12:12', 1),
('2019-01-04 12:12:12', 2), ('2019-01-03 12:12:12', 4),
('2019-01-03 12:12:12', 2), ('2019-01-04 12:12:12', 1);
SELECT a, b, SUM(b)
FROM ctimestamp;
a	b	SUM(b)
2019-01-03 12:12:12	1	10
SELECT a, b, MAX(a)
FROM ctimestamp;
a	b	MAX(a)
2019-01-03 12:12:12	1	2019-01-04 12:12:12
DROP DATABASE IF EXISTS timestamp_test;
CREATE DATABASE timestamp_test;
USE timestamp_test;
CREATE TABLE ctimestamp (a int, b timestamp);
INSERT INTO ctimestamp VALUES (1, 20190101), (1, 20200202),
(2, 20190202), (2, 20200202), (2, 20190101);
SELECT b, count(*) FROM ctimestamp GROUP BY b ORDER BY b;
b	count(*)
2019-01-01 00:00:00	2
2019-02-02 00:00:00	1
2020-02-02 00:00:00	2
SELECT b, max(a), min(a) FROM ctimestamp GROUP BY b ORDER BY b;
b	max(a)	min(a)
2019-01-01 00:00:00	2	1
2019-02-02 00:00:00	2	2
2020-02-02 00:00:00	2	1
SELECT a, max(b), min(b) FROM ctimestamp GROUP BY a ORDER BY a;
a	max(b)	min(b)
1	2020-02-02 00:00:00	2019-01-01 00:00:00
2	2020-02-02 00:00:00	2019-01-01 00:00:00
DROP DATABASE timestamp_test;
